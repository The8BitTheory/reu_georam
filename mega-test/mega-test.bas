#RetroDevStudio.MetaData.BASIC:2049,BASIC V2,uppercase,10,10
3 MP=57088:GB=57343:GP=57342:LA=1:BR=1024:CP=55296:BN=4
4 DEFFNLB(X2)=X2-(INT(X2/256)*256):DEFFNHB(X2)=INT(X2/256)

5 AN=1000
6 GOSUB 2000

# ENABLE MEGA65 I/O PERSONALITY
7 POKE53295,ASC("G"):POKE53295,ASC("S")

10 S=TI:PRINT"";
20 POKE53280,5:POKE53281,5
30 PRINT"                                      ";
40 PRINT"    THE 8 BIT THEORY                  ";
50 PRINT"                                    ";
60 PRINT"                                   ";
70 PRINT"                                  ";
80 PRINT"                               ";
90 PRINT"                                ";
100 PRINT"                              ";
110 PRINT"                               ";
120 PRINT"                    ";
130 PRINT"                     ";
140 PRINT"                      ";
150 PRINT"                    ";
160 PRINT"                    ";
170 PRINT"                    ";
180 PRINT"                     ";
190 PRINT"                       ";
200 PRINT"                       ";
210 PRINT"                           ";
220 PRINT"                               ";
230 PRINT"                                 ";
240 PRINT"                                   ";
250 PRINT"                                     ";
260 PRINT"                                      ";
270 PRINT""TI-S

300 GOSUB 500
310 GETI$:IFI$=""THEN310
320 PRINT "TASTE"
330 GET I$:IFI$=""THEN330
340 S=TI:GOSUB 440:PRINT ""TI-S:GOTO 310
350 END

# FROM REU TO SCREEN
#470 GOSUB 610
440 GOSUB 750
480 GOSUB 850
#474 GOSUB 630
490 RETURN

# STORE SCREEN IN REU
500 REM
#530 GOSUB 600
530 GOSUB 700
540 GOSUB 800
#534 GOSUB 620
560 RETURN

# REU STASH SCREEN
600 POKEMP+2,FN LB(BR):POKEMP+3,FN HB(BR)
601 POKEMP+4,0:POKEMP+5,0
602 POKEMP+6,0
603 POKEMP+7,FN LB(AN):POKEMP+8,FN HB(AN)
604 POKEMP+1,220
609 RETURN

# REU FETCH SCREEN
610 POKEMP+2,FN LB(BR):POKEMP+3,FN HB(BR)
611 POKEMP+4,0:POKEMP+5,0
612 POKEMP+6,0
613 POKEMP+7,FN LB(AN):POKEMP+8,FN HB(AN)
614 POKEMP+1,221
619 RETURN

# REU STASH COLOR
620 POKEMP+2,FN LB(CP):POKEMP+3,FN HB(CP)
621 POKEMP+4,FN LB(AN+1):POKEMP+5,FN HB(AN+1)
622 POKEMP+6,0
623 POKEMP+7,FN LB(AN):POKEMP+8,FN HB(AN)
624 POKEMP+1,220
629 RETURN

# REU FETCH COLOR
630 POKEMP+2,FN LB(CP):POKEMP+3,FN HB(CP)
631 POKEMP+4,FN LB(AN+1):POKEMP+5,FN HB(AN+1)
632 POKEMP+6,0
633 POKEMP+7,FN LB(AN):POKEMP+8,FN HB(AN)
634 POKEMP+1,221
639 RETURN


# REPRESENTS THE BASIC10 DMA FUNCTION

# MEGA STASH SCREEN
700 DL=0
710 GOSUB 1000
749 RETURN


# MEGA FETCH SCREEN
750 DL=1
759 GOSUB 1000
799 RETURN

# MEGA STASH COLOR
800 DL=2
810 GOSUB 1000
849 RETURN


# MEGA FETCH COLOR
850 DL=3
859 GOSUB 1000
899 RETURN


# WRITE DMA-LIST TO MEMORY
900 FORI=1TOLEN(DL$):A=ASC(MID$(DL$,I,1)):POKE49151+I+(DL*12),A:NEXT:RETURN


# EXECUTE DMA JOB AT $0.C000
1000 POKE55042,0: REM DMA LIST IS IN BANK 0
1010 POKE55041,192: REM DMA LIST IS IN $C0XX
1015 POKE55040,DL*12: REM DMA LIST IS IN $XX00, AND EXECUTE
1020 RETURN



# COMMAND LSB: 0=COPY, 3=FILL
2000 DL$=CHR$(0)

# COUNT LSB, MSB ($3E8 = 1000)
2002 DL$=DL$+CHR$(FNLB(AN))+CHR$(FNHB(AN))

# SOURCE ADDRESS LSB,MSB ($0400 SCREEN-RAM)
2003 DL$=DL$+CHR$(FNLB(BR))+CHR$(FNHB(BR))

# SOURCE ADDRESS BANK AND FLAGS (16 BANKS WITH 64KB EACH AVAILABLE)
2004 DL$=DL$+CHR$(0)

# DEST ADDRESS LSB,MSB
2005 DL$=DL$+CHR$(0)+CHR$(0)

# DEST ADDRESS BANK AND FLAGS
2006 DL$=DL$+CHR$(BN)

# COMMAND MSB
2007 DL$=DL$+CHR$(0)

# MODULO (UNUSED)
2008 DL$=DL$+CHR$(0)+CHR$(0)

2009 DL=0:GOSUB 900

###################
# COMMAND LSB: 0=COPY, 3=FILL
2050 DL$=CHR$(0)

# COUNT LSB, MSB ($3E8 = 1000)
2052 DL$=DL$+CHR$(FNLB(AN))+CHR$(FNHB(AN))

# SOURCE ADDRESS LSB,MSB (ZERO AT BANK 4)
2053 DL$=DL$+CHR$(0)+CHR$(0)

# SOURCE ADDRESS BANK AND FLAGS (16 BANKS WITH 64KB EACH AVAILABLE)
2054 DL$=DL$+CHR$(BN)

# DEST ADDRESS LSB,MSB ($0400 SCREEN-RAM)
2055 DL$=DL$+CHR$(FNLB(BR))+CHR$(FNHB(BR))

# DEST ADDRESS BANK AND FLAGS
2056 DL$=DL$+CHR$(0)

# COMMAND MSB
2057 DL$=DL$+CHR$(0)

# MODULO (UNUSED)
2058 DL$=DL$+CHR$(0)+CHR$(0)
2059 DL=1:GOSUB 900

###################

# COMMAND LSB: 0=COPY, 3=FILL
2100 DL$=CHR$(0)

# COUNT LSB, MSB ($3E8 = 1000)
2102 DL$=DL$+CHR$(FNLB(AN))+CHR$(FNHB(AN))

# SOURCE ADDRESS LSB,MSB
2103 DL$=DL$+CHR$(FNLB(CP))+CHR$(FNHB(CP))

# SOURCE ADDRESS BANK AND FLAGS  (BIT 7 SETS I/O ACCESS)
2104 DL$=DL$+CHR$(128)

# DEST ADDRESS LSB,MSB
2105 DL$=DL$+CHR$(FNLB(AN))+CHR$(FNHB(AN))

# DEST ADDRESS BANK AND FLAGS
2106 DL$=DL$+CHR$(BN)

# COMMAND MSB
2107 DL$=DL$+CHR$(0)

# MODULO (UNUSED)
2108 DL$=DL$+CHR$(0)+CHR$(0)
2109 DL=2:GOSUB 900

####################

# COMMAND LSB: 0=COPY, 3=FILL
2150 DL$=CHR$(0)

# COUNT LSB, MSB ($3E8 = 1000)
2152 DL$=DL$+CHR$(FNLB(AN))+CHR$(FNHB(AN))

# SOURCE ADDRESS LSB,MSB (ZERO AT BANK 4)
2153 DL$=DL$+CHR$(FNLB(AN))+CHR$(FNHB(AN))

# SOURCE ADDRESS BANK AND FLAGS (16 BANKS WITH 64KB EACH AVAILABLE)
2154 DL$=DL$+CHR$(BN)

# DEST ADDRESS LSB,MSB
2155 DL$=DL$+CHR$(FNLB(CP))+CHR$(FNHB(CP))

# DEST ADDRESS BANK AND FLAGS (BIT 7 SETS I/O ACCESS)
2156 DL$=DL$+CHR$(128)

# COMMAND MSB
2157 DL$=DL$+CHR$(0)

# MODULO (UNUSED)
2158 DL$=DL$+CHR$(0)+CHR$(0)
2159 DL=3:GOSUB 900

2199 RETURN


# PERFORMANCE COMPARISON

# 11 JIFFIES WHEN USING THE REU
# 40 JIFFIES WHEN ALWAYS BUILDING THE DMA-LIST
# 28 JIFFIES WHEN ASSIGNING THE DMA-LIST TO DL$
#  5 JIFFIES WHEN ONLY 3 POKES ARE NEEDED (DMA LISTS ARE PREPARED IN MEM)


